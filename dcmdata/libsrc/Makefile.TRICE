#
#	Makefile for dcmdata/libsrc
#



SHELL = /bin/sh
VPATH = ../include:../../config/include
srcdir = .
top_srcdir = ..
configdir = ../../config

include $(configdir)/Makefile.def

ofstddir = $(top_srcdir)/../ofstd
oflogdir = $(top_srcdir)/../oflog

LOCALINCLUDES = -I$(ofstddir)/include -I$(oflogdir)/include
LIBDIRS = -L$(ofstddir)/libsrc -L$(oflogdir)/libsrc
ICONVLIBS=-lcharset -liconv
LOCALLIBS = -loflog -lofstd $(ICONVLIBS)
LOCALDEFS =

# clear environment variable in the scope of this makefile
DCMDICTPATH =

# Special defines for the Library, define them in LOCALDEFS
#   DICOMDIR_WITHOUT_BACKUP
#       no Backup for DICOMDIR files. default: not defined
#   PRINT_REPLACED_DICTIONARY_ENTRIES
#       dump duplicate entries in the data dictionary to stderr

dicomdic = $(top_srcdir)/data/dicom.dic
privatedic = $(top_srcdir)/data/private.dic
auddic = $(top_srcdir)/data/aud.dic

dictobjs = dctagkey.o dcdicent.o dcdict.o dcdictbi.o dcvr.o dchashdi.o
objs = dcpixseq.o dcpxitem.o dcuid.o dcerror.o \
	dcstack.o dclist.o dcswap.o dctag.o dcxfer.o \
	dcobject.o dcelem.o dcitem.o dcmetinf.o dcdatset.o dcspchrs.o \
	dcsequen.o dcfilefo.o dcbytstr.o dcpixel.o dcvrae.o dcvras.o dcvrcs.o \
	dccodec.o dcvrda.o dcvrds.o dcvrdt.o dcvris.o dcvrtm.o dcvrui.o \
	dcchrstr.o dcvrlo.o dcvrlt.o dcvrpn.o dcvrsh.o dcvrst.o dcvrobow.o \
	dcvrat.o dcvrss.o dcvrus.o dcvrsl.o dcvrul.o dcvrulup.o dcvrfl.o \
	dcvrfd.o dcvrpobw.o dcvrof.o dcvrod.o dcdirrec.o dcdicdir.o \
	dcrleccd.o dcrlecce.o dcrlecp.o dcrlerp.o dcrledrg.o dcrleerg.o \
	$(dictobjs) cmdlnarg.o dcvrut.o dctypes.o dcpcache.o dcddirif.o \
	dcistrma.o dcistrmb.o dcistrmf.o dcistrmz.o \
	dcostrma.o dcostrmb.o dcostrmf.o dcostrmz.o dcwcache.o dcpath.o \
	modhelp.o vrscan.o vrscanl.o dcfilter.o
objs_trice = dcpixseq.o dcpxitem.o dcuid.o dcerror.o \
	dcstack.o dclist.o dcswap.o dctag.o dcxfer.o \
	dcobject.o dcelem.o dcitem.o dcmetinf.o dcdatset.o dcspchrs_trice.o \
	dcsequen.o dcfilefo.o dcbytstr.o dcpixel.o dcvrae.o dcvras.o dcvrcs.o \
	dccodec.o dcvrda.o dcvrds.o dcvrdt.o dcvris.o dcvrtm.o dcvrui.o \
	dcchrstr.o dcvrlo.o dcvrlt.o dcvrpn.o dcvrsh.o dcvrst.o dcvrobow.o \
	dcvrat.o dcvrss.o dcvrus.o dcvrsl.o dcvrul.o dcvrulup.o dcvrfl.o \
	dcvrfd.o dcvrpobw.o dcvrof.o dcvrod.o dcdirrec.o dcdicdir.o \
	dcrleccd.o dcrlecce.o dcrlecp.o dcrlerp.o dcrledrg.o dcrleerg.o \
	$(dictobjs) cmdlnarg.o dcvrut.o dctypes.o dcpcache.o dcddirif.o \
	dcistrma.o dcistrmb.o dcistrmf.o dcistrmz.o \
	dcostrma.o dcostrmb.o dcostrmf_trice.o dcostrmz.o dcwcache.o dcpath.o \
	modhelp.o vrscan.o vrscanl.o dcfilter.o
support_objs = mkdeftag.o mkdictbi.o dcdictzz.o
support_progs = mkdeftag mkdictbi

# Extra objects needed by support_progs
support_progs_objs = cmdlnarg.o dctypes.o

library = libdcmdata.$(LIBEXT)
library_trice = libdcmdata_trice.$(LIBEXT)


all: $(library) $(library_trice)

install: install-lib install-support

install-lib: $(library) $(library_trice)
	$(configdir)/mkinstalldirs $(DESTDIR)$(libdir)
	$(INSTALL_DATA) $(library) $(DESTDIR)$(libdir)/$(library)
	$(INSTALL_DATA) $(library_trice) $(DESTDIR)$(libdir)/$(library_trice)
	$(RANLIB) $(DESTDIR)$(libdir)/$(library)
	$(RANLIB) $(DESTDIR)$(libdir)/$(library_trice)


$(library): $(objs)
	rm -f $@
	$(AR) $(ARFLAGS) $@ $(objs)
	$(RANLIB) $@

$(library_trice): $(objs_trice)
	rm -f $@
	$(AR) $(ARFLAGS) $@ $(objs_trice)
	$(RANLIB) $@

mkdeftag: mkdeftag.o $(dictobjs) $(support_progs_objs)
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(dictobjs) $(support_progs_objs) $(LOCALLIBS) $(LIBS)

mkdictbi: mkdictbi.o $(dictobjs) $(support_progs_objs)
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(dictobjs) $(support_progs_objs) $(LOCALLIBS) $(LIBS)

mkvrscan:
	flex -8 --header-file=vrscanl.h --outfile=vrscanl.c vrscanl.l


# Generate a new include file of defined tags

gendeftag: mkdeftag $(dicomdic) $(privatedic) $(auddic)
	`pwd`/mkdeftag -o $(top_srcdir)/include/dcmtk/dcmdata/dcdeftag.h $(dicomdic) $(privatedic) $(auddic)

# Generate a file which can be used as a builtin dictionary

dcdictzz.cc: mkdictbi $(dicomdic) $(privatedic) $(auddic)
	`pwd`/mkdictbi -o dcdictzz.cc $(dicomdic) $(privatedic) $(auddic)

# Generate a builtin data dictionary from $(dicomdic) and $(privatedic)

builtindict: nobuiltindict mkdictbi $(dicomdic) $(privatedic) $(auddic)
	`pwd`/mkdictbi $(dicomdic) $(privatedic)  $(auddic)> dcdictbi.cc

# Generate an empty builtin data dictionary

nobuiltindict:
	cp dcdictbi.nul dcdictbi.cc


# Clean-up

clean:
	rm -f $(support_progs) $(support_objs) $(objs) $(objs_trice) $(library) $(TRASH) ${library_trice}

distclean: nobuiltindict clean
	rm -f $(DISTTRASH)


# Dependencies

dependencies:
	$(CXX) -MM $(defines) $(includes) $(CPPFLAGS) $(CXXFLAGS) *.cc  > $(DEP)

include $(DEP)
