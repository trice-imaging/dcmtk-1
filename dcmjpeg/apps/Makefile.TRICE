#
#	Makefile for dcmjpeg/apps
#



SHELL = /bin/sh
VPATH = ../include:../../config/include
srcdir = .
top_srcdir = ..
configdir = ../../config

include $(configdir)/Makefile.def


ofstddir =$(top_srcdir)/../ofstd
ofstdinc = -I$(ofstddir)/include
ofstdlibdir = -L$(ofstddir)/libsrc
ofstdlib = -lofstd

oflogdir = $(top_srcdir)/../oflog
ofloginc = -I$(oflogdir)/include
ofloglibdir = -L$(oflogdir)/libsrc
ofloglib = -loflog

dcmdatadir = $(top_srcdir)/../dcmdata
dcmdatainc = -I$(dcmdatadir)/include
dcmdatalibdir = -L$(dcmdatadir)/libsrc
dcmdatalib = -ldcmdata

dcmimgledir = $(top_srcdir)/../dcmimgle
dcmimgleinc = -I$(dcmimgledir)/include
dcmimglelibdir = -L$(dcmimgledir)/libsrc
dcmimglelib = -ldcmimgle

dcmimagedir = $(top_srcdir)/../dcmimage
dcmimageinc = -I$(dcmimagedir)/include
dcmimagelibdir = -L$(dcmimagedir)/libsrc
dcmimagelib = -ldcmimage

dcmjplsdir = $(top_srcdir)/../dcmjpls
dcmjplsinc = -I$(dcmjplsdir)/include
dcmjplslibdir = -L$(dcmjplsdir)/libsrc -L$(dcmjplsdir)/libcharls
dcmjplslib = -ldcmjpls -lcharls

dcmjpegdir = $(top_srcdir)/../dcmjpeg
dcmjpeginc = -I$(dcmjpegdir)/include
dcmjpeglibdir = -L$(dcmjpegdir)/libsrc -L$(dcmjpegdir)/libijg8 -L$(dcmjpegdir)/libijg12 \
	-L$(dcmjpegdir)/libijg16
dcmjpeglib = -ldcmjpeg -lijg8 -lijg12 -lijg16

LOCALINCLUDES = $(dcmjpeginc) $(ofstdinc) $(ofloginc) $(dcmdatainc) $(dcmimageinc) $(dcmjplsinc) \
	$(dcmimgleinc)
LIBDIRS = -L$(top_srcdir)/libsrc $(dcmjpeglibdir) $(dcmimagelibdir) $(dcmimglelibdir) \
	$(dcmdatalibdir) $(ofloglibdir) $(ofstdlibdir) $(dcmjplslibdir)
ICONVLIBS = ${libdir}/libiconv.a ${libdir}/libcharset.a
LOCALLIBS = $(dcmjpeglib) $(dcmimagelib) $(dcmimglelib) $(dcmdatalib) $(ofloglib)  $(dcmjplslib) \
	$(ofstdlib) $(TIFFLIBS) $(PNGLIBS) $(ZLIBLIBS) $(ICONVLIBS)

objs = dcmdjpeg.o dcmcjpeg.o dcmj2pnm.o dcmmkdir.o dcmaudscale.o
progs = dcmdjpeg dcmcjpeg dcmj2pnm dcmmkdir dcmaudscale
progs-aud = dcmj2pnm dcmaudscale dcmmkdir

ifneq ($(WSYSROOT),$(NOTHING))
   libdir = $(WSYSROOT)
   TRICE_LIBS = ${libdir}/libsend.a ${libdir}/libtrice.a  ${libdir}/libmbedtls.a ${libdir}/libmbedx509.a ${libdir}/libmbedcrypto.a ${libdir}/libpthreadGC2.a ${libdir}/libcrypt32.a ${libdir}/libwsock32.a ${libdir}/libws2_32.a ${libdir}/libmswsock.a
else
   TRICE_LIBS = ${libdir}/libsend.a ${libdir}/libtrice.a  ${libdir}/libmbedtls.a ${libdir}/libmbedx509.a ${libdir}/libmbedcrypto.a 
endif


all: $(progs)
aud:  dcmj2pnm dcmaudscale dcmmkdir

dcmdjpeg: dcmdjpeg.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)

dcmcjpeg: dcmcjpeg.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)

dcmaudscale: dcmaudscale.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(TRICE_LIBS) $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -ltcmalloc_minimal -lpthread
	#$(CXX) -DGE $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -ltcmalloc_minimal -lpthread
endif
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f dcmaudscale  dcmaudscale.exe
	$(STRIPX) dcmaudscale.exe
	cp -f dcmaudscale.exe /tmp
endif

dcmj2pnm: dcmj2pnm.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(TRICE_LIBS) $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -ltcmalloc_minimal -lpthread
endif
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f dcmj2pnm  dcmj2pnm.exe
	$(STRIPX) dcmj2pnm.exe
	cp -f dcmj2pnm.exe /tmp
endif

dcmmkdir: dcmmkdir.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f dcmmkdir  dcmmkdir.exe
	$(STRIPX) dcmmkdir.exe
	cp -f dcmmkdir.exe /tmp
endif

install: all
	$(configdir)/mkinstalldirs $(DESTDIR)$(bindir)
	for prog in $(progs); do \
		$(INSTALL_PROGRAM) $$prog$(BINEXT) $(DESTDIR)$(bindir) && $(STRIP) $(DESTDIR)$(bindir)/$$prog$(BINEXT) ;\
	done

install-aud: aud
	$(configdir)/mkinstalldirs $(DESTDIR)$(bindir)
	for prog in $(progs-aud); do \
		$(INSTALL_PROGRAM) $$prog$(BINEXT) $(DESTDIR)$(bindir) && $(STRIP) $(DESTDIR)$(bindir)/$$prog$(BINEXT) ;\
	done


clean:
	rm -f $(objs) $(progs) $(TRASH)

distclean:
	rm -f $(objs) $(progs) $(DISTTRASH)


dependencies:
	$(CXX) -MM $(defines) $(includes) $(CPPFLAGS) $(CXXFLAGS) *.cc  > $(DEP)

include $(DEP)
