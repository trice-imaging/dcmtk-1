#
#	Makefile for dcmdata/apps
#



SHELL = /bin/sh
VPATH = ../include:../../config/include
srcdir = .
top_srcdir = ..
configdir = ../../config

include $(configdir)/Makefile.def

ofstddir = $(top_srcdir)/../ofstd
oflogdir = $(top_srcdir)/../oflog

LOCALINCLUDES = -I$(ofstddir)/include -I$(oflogdir)/include
LIBDIRS = -L$(top_srcdir)/libi2d -L$(top_srcdir)/libsrc -L$(ofstddir)/libsrc \
	-L$(oflogdir)/libsrc
ICONVLIBS = ${libdir}/libiconv.a ${libdir}/libcharset.a #-liconv -lcharset 
LOCALLIBS = -ldcmdata -loflog -lofstd $(ZLIBLIBS) $(ICONVLIBS) 
LOCALLIBS_TRICE = -ldcmdata_trice -loflog -lofstd $(ZLIBLIBS) $(ICONVLIBS)
LIBI2D = -li2d

objs = dcmftest.o dcmconv.o dcmdump.o dump2dcm.o dcmgpdir.o dcm2xml.o \
	xml2dcm.o dcmcrle.o dcmdrle.o dcmodify.o mdfdsman.o mdfconen.o \
	pdf2dcm.o dcm2pdf.o img2dcm.o

progs = dcmftest dcmconv dcmdump dump2dcm dcmgpdir dcm2xml xml2dcm dcmcrle \
	dcmdrle dcmodify pdf2dcm dcm2pdf img2dcm
ifneq ($(WSYSROOT),$(NOTHING))
progs-aud = dcmdump dump2dcm dcm2pdf img2dcm 
else
progs-aud = dcmdump dump2dcm pdf2dcm dcm2xml img2dcm dcmodify dcm2pdf
endif

ifneq ($(WSYSROOT),$(NOTHING))
   libdir = $(WSYSROOT)
   WINLIBS = ${libdir}/libwsock32.a ${libdir}/libws2_32.a ${libdir}/libmswsock.a
endif
ifneq ($(WSYSROOT),$(NOTHING))
   libdir = $(WSYSROOT)
   TRICE_LIBS = ${libdir}/libsend.a ${libdir}/libtrice.a ${libdir}/libmbedtls.a ${libdir}/libmbedx509.a ${libdir}/libmbedcrypto.a  ${libdir}/libpthreadGC2.a ${libdir}/libcrypt32.a ${libdir}/libwsock32.a ${libdir}/libws2_32.a ${libdir}/libmswsock.a
else
   TRICE_LIBS = ${libdir}/libsend.a ${libdir}/libtrice.a  ${libdir}/libmbedtls.a ${libdir}/libmbedx509.a ${libdir}/libmbedcrypto.a
endif

all: $(progs)
ifneq ($(WSYSROOT),$(NOTHING))
aud:  dcmdump dump2dcm dcm2pdf img2dcm 
else
aud:  dcmdump dump2dcm img2dcm pdf2dcm dcm2xml dcmodify dcm2pdf
endif

# Note: dcmftest does not need LOCALLIBS on most platforms, but on OSF1 it is required.
dcmftest: dcmftest.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)

dcmconv: dcmconv.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)

dcmdump: dcmdump.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a ${libdir}/libcharset.a -ltcmalloc_minimal -lpthread
endif
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f dcmdump  dcmdump.exe
	$(STRIPX) dcmdump.exe
	cp -f dcmdump.exe /tmp
endif

dump2dcm: dump2dcm.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -liconv -lcharset -ltcmalloc_minimal -lpthread
endif
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f dump2dcm  dump2dcm.exe
	$(STRIPX) dump2dcm.exe
	cp -f dump2dcm.exe /tmp
endif

dcmgpdir: dcmgpdir.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)

dcmcrle: dcmcrle.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)

dcmdrle: dcmdrle.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS)

xml2dcm: xml2dcm.o
ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libxml2.a ${libdir}/libiconv.a -lcharset -lpthread
else ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS) $(MATHLIBS) $(LIBS) $(WINLIBS)
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -lxml2 -liconv -lcharset -lz -ltcmalloc_minimal -lpthread
endif

dcm2xml: dcm2xml.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -liconv -lcharset -ltcmalloc_minimal -lpthread
endif
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f dcm2xml  dcm2xml.exe
	$(STRIPX) dcm2xml.exe
	cp -f dcm2xml.exe /tmp
endif

dcmodify: dcmodify.o mdfconen.o mdfdsman.o
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o mdfconen.o mdfdsman.o $(LOCALLIBS) ${TRICE_LIBS} $(MATHLIBS) $(LIBS) 

pdf2dcm: pdf2dcm.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LIBI2D) $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LIBI2D) $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LIBI2D) $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -liconv -lcharset -ltcmalloc_minimal -lpthread
endif

dcm2pdf: dcm2pdf.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a ${libdir}/libcharset.a -ltcmalloc_minimal -lpthread
endif
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f dcm2pdf  dcm2pdf.exe
	$(STRIPX) dcm2pdf.exe
	cp -f dcm2pdf.exe /tmp
endif

img2dcm: img2dcm.o
ifneq ($(WSYSROOT),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LIBI2D) $(LOCALLIBS_TRICE) $(TRICE_LIBS) ${libdir}/libtrice.a $(MATHLIBS) $(LIBS)
else ifneq ($(OSX),$(NOTHING))
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LIBI2D) $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) ${libdir}/libiconv.a -lcharset -lpthread
else
	$(CXX) $(CXXFLAGS) $(LIBDIRS) $(LDFLAGS) -o $@ $@.o $(LIBI2D) $(LOCALLIBS_TRICE) $(TRICE_LIBS) $(MATHLIBS) $(LIBS) -liconv -lcharset ${libdir}/libtrice.a -ltcmalloc_minimal -lpthread
endif
ifneq ($(WSYSROOT),$(NOTHING))
	cp -f img2dcm  img2dcm.exe
	$(STRIPX) img2dcm.exe
	cp -f img2dcm.exe /tmp
endif

install: install-bin

install-bin: all
	$(configdir)/mkinstalldirs $(DESTDIR)$(bindir)
	for prog in $(progs); do \
		$(INSTALL_PROGRAM) $$prog$(BINEXT) $(DESTDIR)$(bindir) && $(STRIP) $(DESTDIR)$(bindir)/$$prog$(BINEXT) ;\
	done

install-aud: aud
	$(configdir)/mkinstalldirs $(DESTDIR)$(bindir)
	for prog in $(progs-aud); do \
		$(INSTALL_PROGRAM) $$prog$(BINEXT) $(DESTDIR)$(bindir) && $(STRIP) $(DESTDIR)$(bindir)/$$prog$(BINEXT) ;\
	done

clean:
	rm -f $(objs) $(progs) $(TRASH)

distclean:
	rm -f $(objs) $(progs) $(DISTTRASH)


dependencies:
	$(CXX) -MM $(defines) $(includes) $(CPPFLAGS) $(CXXFLAGS) *.cc  > $(DEP)

include $(DEP)
